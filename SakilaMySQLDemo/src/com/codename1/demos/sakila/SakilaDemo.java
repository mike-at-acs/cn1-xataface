package com.codename1.demos.sakila;


import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.util.SuccessCallback;
import com.xataface.query.XFClient;
import com.xataface.query.XFQuery;
import com.xataface.query.XFRowSet;
import com.xataface.ui.XFUIRecordList;
import java.io.IOException;
import java.util.Date;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class SakilaDemo {

    private Form current;
    private Resources theme;
    XFClient client;
    Form mainForm;
    
    public void init(Object context) {
        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature, uncomment if you have a pro subscription
        // Log.bindCrashProtection(true);
        
        client = new XFClient("http://localhost/sakila/index.php");
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        mainForm = new Form("Customers");
        mainForm.setLayout(new BorderLayout());
        mainForm.show();
        Display.getInstance().callSerially(()->{
            showCustomers();
        });
        
    }

    public void stop() {
        current = Display.getInstance().getCurrent();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }
    
    void showCustomers() {
        loadCustomers(rowset -> {
            if (rowset != null) {
                mainForm.addComponent(BorderLayout.CENTER, new XFUIRecordList(rowset, client));
                mainForm.revalidate();
            }
        });
        
    }
    
    private void loadCustomers(SuccessCallback<XFRowSet> callback) {
        Date dt = new Date();
        dt.setTime(System.currentTimeMillis() / 1000l);
        System.out.println("here: "+dt);
        XFQuery query = new XFQuery("customer")
                //.greaterThan("modified", dt)
                .sort(XFQuery.SortOrder.ASCENDING, "last_name")
                .select("first_name", "last_name", "email")
                .matches("active", 1)
                .findAll();
        client.find(query, callback);
        
    }
    
    public void destroy() {
    }

}
