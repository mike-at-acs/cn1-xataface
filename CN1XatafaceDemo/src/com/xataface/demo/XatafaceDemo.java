package com.xataface.demo;


import com.codename1.components.InfiniteScrollAdapter;
import com.codename1.components.MultiButton;
import com.codename1.components.SpanButton;
import com.codename1.components.ToastBar;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Button;
import com.codename1.ui.Command;
import com.codename1.ui.Container;
import com.codename1.ui.FontImage;
import com.codename1.ui.TextArea;
import com.codename1.ui.TextField;
import com.codename1.ui.Toolbar;
import com.codename1.ui.animations.CommonTransitions;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.layouts.GridLayout;
import com.codename1.ui.table.TableLayout;
import com.codename1.util.SuccessCallback;
import com.xataface.query.XFClient;
import com.xataface.query.XFQuery;
import com.xataface.query.XFRowSet;

import com.xataface.ui.XFUIRecordList;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class XatafaceDemo {

    private Form current;
    private Resources theme;
    private XFClient client;
    private Form mainForm;

    public void init(Object context) {
        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature, uncomment if you have a pro subscription
        // Log.bindCrashProtection(true);
        client = new XFClient("http://localhost/cltest/index.php");
        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        Form hi = new Form("Comics");
        mainForm = hi;
        hi.setLayout(new BorderLayout());
        hi.add(BorderLayout.CENTER, new Label("Loading"));
        
        Button logout = new Button("Logout");
        logout.addActionListener(e->{
            client.logout(res->{
                if (!res) {
                    ToastBar.showErrorMessage("Failed to log out");
                } else {
                    client.setUsername(null);
                    client.setPassword(null);
                    ToastBar.showMessage("Successfully logged out", FontImage.MATERIAL_INFO);
                }
            });
        });
        
        
        
        Runnable refresh = ()->{
            loadSeries(rowset->{
                if (rowset != null) {
                    mainForm.addComponent(BorderLayout.CENTER, new XFUIRecordList(rowset, client));
                    mainForm.revalidate();
                }
            });

        };
        hi.show();
        
        Button reload = new Button("Reload");
        reload.addActionListener(e->{
            refresh.run();
        });
        
        mainForm.addComponent(BorderLayout.SOUTH, GridLayout.encloseIn(reload, logout));
        Display.getInstance().callSerially(refresh);
        
    }
    
    private void loadSeries(SuccessCallback<XFRowSet> callback) {
        Date dt = new Date();
        dt.setTime(System.currentTimeMillis() / 1000l);
        System.out.println("here: "+dt);
        XFQuery query = new XFQuery("gcd_series")
                .contains("name", "Transformers")
                //.greaterThan("modified", dt)
                .sort(XFQuery.SortOrder.DESCENDING, "year_began")
                .select("name", "issue_count", "year_began", "year_ended")
                .findAll();
        client.find(query, callback);
        
    }
    
    
    
   

    public void stop() {
        current = Display.getInstance().getCurrent();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }
    
    public void destroy() {
    }

}
